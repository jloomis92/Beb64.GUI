<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:pf="clr-namespace:System.Windows.Controls;assembly=PresentationFramework"
>

    <!-- =======================
         Colors
    ======================== -->
    <Color x:Key="WindowBackgroundColor">#FFFFFFFF</Color>
    <Color x:Key="WindowForegroundColor">#FF1E1E1E</Color>
    <Color x:Key="AccentColor">#FF0078D4</Color>
    <Color x:Key="ControlBackgroundColor">#FFF5F5F5</Color>
    <Color x:Key="ControlBorderColor">#FFCCCCCC</Color>
    <Color x:Key="ControlHoverColor">#FFE6F2FB</Color>
    <Color x:Key="ControlPressedColor">#FFD6E9FA</Color>
    <Color x:Key="DisabledForegroundColor">#FF9E9E9E</Color>
    <Color x:Key="DisabledBackgroundColor">#FFF0F0F0</Color>
    <Color x:Key="MenuBackgroundColor">#FFF0F0F0</Color>
    <Color x:Key="MenuForegroundColor">#FF1E1E1E</Color>
    <Color x:Key="StatusBarBackgroundColor">#FFF0F0F0</Color>
    <Color x:Key="StatusBarForegroundColor">#FF1E1E1E</Color>
    <Color x:Key="SelectionBackgroundColor">#CC0078D4</Color>
    <Color x:Key="SelectionForegroundColor">#FFFFFFFF</Color>

    <!-- =======================
         Brushes
    ======================== -->
    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="{DynamicResource WindowBackgroundColor}" />
    <SolidColorBrush x:Key="WindowForegroundBrush" Color="{DynamicResource WindowForegroundColor}" />
    <SolidColorBrush x:Key="AccentBrush" Color="{DynamicResource AccentColor}" />
    <SolidColorBrush x:Key="ControlBackgroundBrush" Color="{DynamicResource ControlBackgroundColor}" />
    <SolidColorBrush x:Key="ControlBorderBrush" Color="{DynamicResource ControlBorderColor}" />
    <SolidColorBrush x:Key="ControlHoverBrush" Color="{DynamicResource ControlHoverColor}" />
    <SolidColorBrush x:Key="ControlPressedBrush" Color="{DynamicResource ControlPressedColor}" />
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="{DynamicResource DisabledForegroundColor}" />
    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="{DynamicResource DisabledBackgroundColor}" />
    <SolidColorBrush x:Key="MenuBackgroundBrush" Color="{DynamicResource MenuBackgroundColor}" />
    <SolidColorBrush x:Key="MenuForegroundBrush" Color="{DynamicResource MenuForegroundColor}" />
    <!-- Make the submenu/drop-down use our themed colors -->
    <SolidColorBrush x:Key="{x:Static SystemColors.MenuBrushKey}"     Color="{Binding Source={StaticResource MenuBackgroundBrush}, Path=Color}" />
    <SolidColorBrush x:Key="{x:Static SystemColors.MenuTextBrushKey}" Color="{Binding Source={StaticResource MenuForegroundBrush}, Path=Color}" />
    <SolidColorBrush x:Key="StatusBarBackgroundBrush" Color="{DynamicResource StatusBarBackgroundColor}" />
    <SolidColorBrush x:Key="StatusBarForegroundBrush" Color="{DynamicResource StatusBarForegroundColor}" />
    <SolidColorBrush x:Key="SelectionBackgroundBrush" Color="{DynamicResource SelectionBackgroundColor}" />
    <SolidColorBrush x:Key="SelectionForegroundBrush" Color="{DynamicResource SelectionForegroundColor}" />

    <!-- =======================
         Window
    ======================== -->
    <Style TargetType="Window">
        <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource WindowForegroundBrush}" />
    </Style>

    <!-- =======================
         Menu / MenuItem / Separator
    ======================== -->
    <!-- Menu -->
    <Style TargetType="Menu">
        <Setter Property="Background" Value="{DynamicResource MenuBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource MenuForegroundBrush}" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
    </Style>

    <!-- MenuItem -->
    <Style TargetType="MenuItem">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource MenuForegroundBrush}" />
        <Setter Property="Padding" Value="6,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Grid>
                        <!-- Header -->
                        <Border x:Name="Border"
                            Background="{TemplateBinding Background}">
                            <Grid Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <!-- Text / header -->
                                <ContentPresenter Grid.Column="0"
                                              ContentSource="Header"
                                              RecognizesAccessKey="True"
                                              VerticalAlignment="Center" />

                                <!-- Arrow (hidden by default; only for submenu headers) -->
                                <TextBlock x:Name="Arrow"
                                       Grid.Column="1"
                                       Text="›"
                                       Margin="8,0,0,0"
                                       VerticalAlignment="Center"
                                       Foreground="{DynamicResource MenuForegroundBrush}"
                                       Visibility="Collapsed"
                                       FontSize="16" />
                            </Grid>
                        </Border>

                        <!-- Popup -->
                        <Popup x:Name="Popup"
                           Placement="Bottom"
                           IsOpen="{TemplateBinding IsSubmenuOpen}"
                           AllowsTransparency="True"
                           Focusable="False"
                           PopupAnimation="Fade">
                            <Border x:Name="SubmenuBorder"
                                Background="{DynamicResource MenuBackgroundBrush}"
                                BorderBrush="{DynamicResource ControlBorderBrush}"
                                BorderThickness="1"
                                Padding="4"
                                SnapsToDevicePixels="True">
                                <StackPanel IsItemsHost="True"
                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                        Margin="2" />
                            </Border>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!-- Show arrow only for submenu headers (NOT top-level headers) -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasItems" Value="True"/>
                                <Condition Property="Role" Value="{x:Static pf:MenuItemRole.SubmenuHeader}"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Arrow" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>

                        <!-- Top-level items explicitly hide the arrow -->
                        <Trigger Property="Role" Value="{x:Static pf:MenuItemRole.TopLevelHeader}">
                            <Setter TargetName="Arrow" Property="Visibility" Value="Collapsed"/>
                        </Trigger>

                        <!-- Hover -->
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlHoverBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource MenuForegroundBrush}" />
                        </Trigger>

                        <!-- Disabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Separator -->
    <Style TargetType="Separator">
        <Setter Property="Margin" Value="2,4" />
        <Setter Property="Background" Value="{DynamicResource ControlBorderBrush}" />
        <Setter Property="Height" Value="1" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Rectangle Height="{TemplateBinding Height}"
                           Fill="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <!-- =======================
         StatusBar
    ======================== -->
    <Style TargetType="StatusBar">
        <Setter Property="Background" Value="{DynamicResource StatusBarBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource StatusBarForegroundBrush}" />
        <Setter Property="Padding" Value="6,2" />
    </Style>

    <!-- =======================
         TextBox
    ======================== -->
    <Style TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource WindowForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource SelectionBackgroundBrush}" />
        <Setter Property="SelectionTextBrush" Value="{DynamicResource SelectionForegroundBrush}" />
        <Setter Property="CaretBrush" Value="{DynamicResource WindowForegroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- =======================
         Button
    ======================== -->
    <Style TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource WindowForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="6,3" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Margin="{TemplateBinding Padding}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ControlHoverBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ControlPressedBrush}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource AccentBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
