<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:pf="clr-namespace:System.Windows.Controls;assembly=PresentationFramework"
                    xmlns:helpers="clr-namespace:Beb64.GUI.Helpers">

    <!-- =======================
         Colors
    ======================== -->
    <Color x:Key="WindowBackgroundColor">#FF1E1E1E</Color>
    <Color x:Key="WindowForegroundColor">#FFEDEDED</Color>
    <Color x:Key="AccentColor">#FF569CD6</Color>
    <Color x:Key="ControlBackgroundColor">#FF2B2B2B</Color>
    <Color x:Key="ControlBorderColor">#FF3F3F3F</Color>
    <Color x:Key="ControlHoverColor">#FF3A3A3A</Color>
    <Color x:Key="ControlPressedColor">#FF454545</Color>
    <Color x:Key="DisabledForegroundColor">#FF7A7A7A</Color>
    <Color x:Key="DisabledBackgroundColor">#FF2A2A2A</Color>
    <Color x:Key="MenuBackgroundColor">#FF2A2A2A</Color>
    <Color x:Key="MenuForegroundColor">#FFEDEDED</Color>
    <Color x:Key="StatusBarBackgroundColor">#FF2A2A2A</Color>
    <Color x:Key="StatusBarForegroundColor">#FFEDEDED</Color>
    <Color x:Key="SelectionBackgroundColor">#CC569CD6</Color>
    <Color x:Key="SelectionForegroundColor">#FFFFFFFF</Color>

    <!-- =======================
         Brushes
    ======================== -->
    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="{StaticResource WindowBackgroundColor}" />
    <SolidColorBrush x:Key="WindowForegroundBrush" Color="{StaticResource WindowForegroundColor}" />
    <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource AccentColor}" />
    <SolidColorBrush x:Key="ControlBackgroundBrush" Color="{StaticResource ControlBackgroundColor}" />
    <SolidColorBrush x:Key="ControlBorderBrush" Color="{StaticResource ControlBorderColor}" />
    <SolidColorBrush x:Key="ControlHoverBrush" Color="{StaticResource ControlHoverColor}" />
    <SolidColorBrush x:Key="ControlPressedBrush" Color="{StaticResource ControlPressedColor}" />
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="{StaticResource DisabledForegroundColor}" />
    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="{StaticResource DisabledBackgroundColor}" />
    <SolidColorBrush x:Key="MenuBackgroundBrush" Color="{StaticResource MenuBackgroundColor}" />
    <SolidColorBrush x:Key="MenuForegroundBrush" Color="{StaticResource MenuForegroundColor}" />
    <SolidColorBrush x:Key="StatusBarBackgroundBrush" Color="{StaticResource StatusBarBackgroundColor}" />
    <SolidColorBrush x:Key="StatusBarForegroundBrush" Color="{StaticResource StatusBarForegroundColor}" />
    <SolidColorBrush x:Key="SelectionBackgroundBrush" Color="{StaticResource SelectionBackgroundColor}" />
    <SolidColorBrush x:Key="SelectionForegroundBrush" Color="{StaticResource SelectionForegroundColor}" />
    <SolidColorBrush x:Key="WatermarkBrush" Color="#99FFFFFF"/>

    <!-- (Optional) If you still want to recolor the default popup using SystemColors,
         do it *without* Binding. Uncomment if needed.
    <SolidColorBrush x:Key="{x:Static SystemColors.MenuBrushKey}"
                     Color="{StaticResource MenuBackgroundColor}" />
    <SolidColorBrush x:Key="{x:Static SystemColors.MenuTextBrushKey}"
                     Color="{StaticResource MenuForegroundColor}" />
    -->

    <!-- =======================
         Window
    ======================== -->
    <Style TargetType="Window">
        <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource WindowForegroundBrush}" />
    </Style>

    <!-- =======================
         Menu / MenuItem / Separator
    ======================== -->

    <!-- Menu -->
    <Style TargetType="Menu">
        <Setter Property="Background" Value="{DynamicResource MenuBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource MenuForegroundBrush}" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
    </Style>

    <!-- MenuItem -->
    <!-- MenuItem -->
    <Style TargetType="MenuItem">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource MenuForegroundBrush}" />
        <Setter Property="Padding" Value="6,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Grid>
                        <Border x:Name="Border" Background="{TemplateBinding Background}">
                            <Grid Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <!-- Column for bullet/check -->
                                    <ColumnDefinition Width="16"/>
                                    <!-- Column for text -->
                                    <ColumnDefinition />
                                    <!-- Column for arrow -->
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <!-- Bullet (only shown when IsChecked=True) -->
                                <TextBlock x:Name="CheckGlyph"
                                       Grid.Column="0"
                                       Text="•"
                                       FontSize="14"
                                       Margin="0,0,6,0"
                                       Foreground="{DynamicResource MenuForegroundBrush}"
                                       Visibility="Collapsed"
                                       VerticalAlignment="Center"/>

                                <!-- Text -->
                                <ContentPresenter Grid.Column="1"
                                              ContentSource="Header"
                                              RecognizesAccessKey="True"
                                              VerticalAlignment="Center" />

                                <!-- Arrow -->
                                <TextBlock x:Name="Arrow"
                                       Grid.Column="2"
                                       Text="›"
                                       Margin="8,0,0,0"
                                       VerticalAlignment="Center"
                                       Foreground="{DynamicResource MenuForegroundBrush}"
                                       Visibility="Collapsed"
                                       FontSize="16" />
                            </Grid>
                        </Border>

                        <!-- Popup -->
                        <Popup x:Name="Popup"
                           Placement="Bottom"
                           IsOpen="{TemplateBinding IsSubmenuOpen}"
                           AllowsTransparency="True"
                           Focusable="False"
                           PopupAnimation="Fade">
                            <Border x:Name="SubmenuBorder"
                                Background="{DynamicResource MenuBackgroundBrush}"
                                BorderBrush="{DynamicResource ControlBorderBrush}"
                                BorderThickness="1"
                                Padding="4"
                                SnapsToDevicePixels="True">
                                <StackPanel IsItemsHost="True"
                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                        Margin="2" />
                            </Border>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!-- Show bullet when checked -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckGlyph" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <!-- Show arrow only for submenu headers -->
                        <Trigger Property="Role" Value="{x:Static pf:MenuItemRole.SubmenuHeader}">
                            <Setter TargetName="Arrow" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <!-- Hide arrow for top-level headers -->
                        <Trigger Property="Role" Value="{x:Static pf:MenuItemRole.TopLevelHeader}">
                            <Setter TargetName="Arrow" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <!-- Hover -->
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlHoverBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource MenuForegroundBrush}" />
                        </Trigger>

                        <!-- Disabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Separator -->
    <Style TargetType="Separator">
        <Setter Property="Margin" Value="2,4" />
        <Setter Property="Background" Value="{DynamicResource ControlBorderBrush}" />
        <Setter Property="Height" Value="1" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Rectangle Height="{TemplateBinding Height}"
                               Fill="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- =======================
         StatusBar
    ======================== -->
    <Style TargetType="StatusBar">
        <Setter Property="Background" Value="{DynamicResource StatusBarBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource StatusBarForegroundBrush}" />
        <Setter Property="Padding" Value="6,2" />
    </Style>

    <!-- =======================
         TextBox
    ======================== -->
    <Style TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource WindowForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource SelectionBackgroundBrush}" />
        <Setter Property="SelectionTextBrush" Value="{DynamicResource SelectionForegroundBrush}" />
        <Setter Property="CaretBrush" Value="{DynamicResource WindowForegroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border 
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost"/>
                            <TextBlock x:Name="Watermark"
                                       Text="{Binding (helpers:WatermarkHelper.Watermark), RelativeSource={RelativeSource TemplatedParent}}"
                                       Foreground="{DynamicResource WatermarkBrush}"
                                       Margin="6,4,0,0"
                                       IsHitTestVisible="False"
                                       VerticalAlignment="Top"
                                       Opacity="0.7"
                                       Visibility="Collapsed"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="Watermark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="Watermark" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- =======================
         Button
    ======================== -->
    <Style TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource WindowForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="6,3" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Margin="{TemplateBinding Padding}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ControlHoverBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ControlPressedBrush}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource AccentBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>