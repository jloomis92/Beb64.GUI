<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- =======================
         Colors
    ======================== -->
    <Color x:Key="WindowBackgroundColor">#FF1E1E1E</Color>
    <Color x:Key="WindowForegroundColor">#FFEDEDED</Color>
    <Color x:Key="AccentColor">#FF569CD6</Color>
    <Color x:Key="ControlBackgroundColor">#FF2B2B2B</Color>
    <Color x:Key="ControlBorderColor">#FF3F3F3F</Color>
    <Color x:Key="ControlHoverColor">#FF3A3A3A</Color>
    <Color x:Key="ControlPressedColor">#FF454545</Color>
    <Color x:Key="DisabledForegroundColor">#FF7A7A7A</Color>
    <Color x:Key="DisabledBackgroundColor">#FF2A2A2A</Color>
    <Color x:Key="MenuBackgroundColor">#FF2A2A2A</Color>
    <Color x:Key="MenuForegroundColor">#FFEDEDED</Color>
    <Color x:Key="StatusBarBackgroundColor">#FF2A2A2A</Color>
    <Color x:Key="StatusBarForegroundColor">#FFEDEDED</Color>
    <Color x:Key="SelectionBackgroundColor">#CC569CD6</Color>
    <Color x:Key="SelectionForegroundColor">#FFFFFFFF</Color>

    <!-- =======================
         Brushes
    ======================== -->
    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="{DynamicResource WindowBackgroundColor}" />
    <SolidColorBrush x:Key="WindowForegroundBrush" Color="{DynamicResource WindowForegroundColor}" />
    <SolidColorBrush x:Key="AccentBrush" Color="{DynamicResource AccentColor}" />
    <SolidColorBrush x:Key="ControlBackgroundBrush" Color="{DynamicResource ControlBackgroundColor}" />
    <SolidColorBrush x:Key="ControlBorderBrush" Color="{DynamicResource ControlBorderColor}" />
    <SolidColorBrush x:Key="ControlHoverBrush" Color="{DynamicResource ControlHoverColor}" />
    <SolidColorBrush x:Key="ControlPressedBrush" Color="{DynamicResource ControlPressedColor}" />
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="{DynamicResource DisabledForegroundColor}" />
    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="{DynamicResource DisabledBackgroundColor}" />
    <SolidColorBrush x:Key="MenuBackgroundBrush" Color="{DynamicResource MenuBackgroundColor}" />
    <SolidColorBrush x:Key="MenuForegroundBrush" Color="{DynamicResource MenuForegroundColor}" />
    <!-- Make the submenu/drop-down use our themed colors -->
    <SolidColorBrush x:Key="{x:Static SystemColors.MenuBrushKey}"     Color="{Binding Source={StaticResource MenuBackgroundBrush}, Path=Color}" />
    <SolidColorBrush x:Key="{x:Static SystemColors.MenuTextBrushKey}" Color="{Binding Source={StaticResource MenuForegroundBrush}, Path=Color}" />
    <SolidColorBrush x:Key="StatusBarBackgroundBrush" Color="{DynamicResource StatusBarBackgroundColor}" />
    <SolidColorBrush x:Key="StatusBarForegroundBrush" Color="{DynamicResource StatusBarForegroundColor}" />
    <SolidColorBrush x:Key="SelectionBackgroundBrush" Color="{DynamicResource SelectionBackgroundColor}" />
    <SolidColorBrush x:Key="SelectionForegroundBrush" Color="{DynamicResource SelectionForegroundColor}" />

    <!-- =======================
         Window
    ======================== -->
    <Style TargetType="Window">
        <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource WindowForegroundBrush}" />
    </Style>

    <!-- =======================
         Menu / MenuItem / Separator
    ======================== -->

    <!-- Menu -->
    <Style TargetType="Menu">
        <Setter Property="Background" Value="{DynamicResource MenuBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource MenuForegroundBrush}" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
    </Style>

    <!-- MenuItem -->
    <Style TargetType="MenuItem">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource MenuForegroundBrush}" />
        <Setter Property="Padding" Value="6,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Grid>
                        <!-- Top-level header -->
                        <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}">
                            <ContentPresenter ContentSource="Header" RecognizesAccessKey="True"/>
                        </Border>

                        <!-- Popup for submenus (open BELOW, larger size) -->
                        <Popup x:Name="Popup"
                           Placement="Bottom"
                           IsOpen="{TemplateBinding IsSubmenuOpen}"
                           AllowsTransparency="True"
                           Focusable="False"
                           PopupAnimation="Fade">
                            <Border x:Name="SubmenuBorder"
                                Background="{DynamicResource MenuBackgroundBrush}"
                                BorderBrush="{DynamicResource ControlBorderBrush}"
                                BorderThickness="1"
                                SnapsToDevicePixels="True"
                                Padding="4">
                                <!-- Added padding to enlarge popup -->
                                <StackPanel IsItemsHost="True" 
                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                        Margin="2"/>
                                <!-- Slight margin inside -->
                            </Border>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!-- Hover state -->
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlHoverBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource MenuForegroundBrush}" />
                        </Trigger>

                        <!-- Disabled state -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <!-- Separator -->
    <Style TargetType="Separator">
        <Setter Property="Margin" Value="2,4" />
        <Setter Property="Background" Value="{DynamicResource ControlBorderBrush}" />
        <Setter Property="Height" Value="1" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Rectangle Height="{TemplateBinding Height}"
                           Fill="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <!-- =======================
         StatusBar
    ======================== -->
    <Style TargetType="StatusBar">
        <Setter Property="Background" Value="{DynamicResource StatusBarBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource StatusBarForegroundBrush}" />
        <Setter Property="Padding" Value="6,2" />
    </Style>

    <!-- =======================
         TextBox
    ======================== -->
    <Style TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource WindowForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource SelectionBackgroundBrush}" />
        <Setter Property="SelectionTextBrush" Value="{DynamicResource SelectionForegroundBrush}" />
        <Setter Property="CaretBrush" Value="{DynamicResource WindowForegroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- =======================
         Button
    ======================== -->
    <Style TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource WindowForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="6,3" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Margin="{TemplateBinding Padding}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ControlHoverBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ControlPressedBrush}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource AccentBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
